name: 'Infrastructure Deployment'

on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infrastructure/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

permissions:
  id-token: write
  contents: read

env:
  AZURE_RESOURCE_GROUP: 'skillradar-rg'
  AZURE_LOCATION: 'japaneast'

jobs:
  validate:
    name: 'Validate Bicep Templates'
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4

    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Build Bicep Templates'
      run: |
        az bicep build --file infrastructure/bicep/main.bicep

    - name: 'Validate Bicep Templates'
      run: |
        az deployment group validate \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --template-file infrastructure/bicep/main.bicep \
          --parameters environment=${{ github.event.inputs.environment || 'dev' }} \
          --parameters openAiApiKey=${{ secrets.OPENAI_API_KEY }} \
          --parameters newsApiKey="${{ secrets.NEWS_API_KEY }}" \
          --parameters redditClientId="${{ secrets.REDDIT_CLIENT_ID }}" \
          --parameters redditClientSecret="${{ secrets.REDDIT_CLIENT_SECRET }}"

  preview:
    name: 'Preview Infrastructure Changes'
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4

    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'What-If Analysis'
      run: |
        az deployment group what-if \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --template-file infrastructure/bicep/main.bicep \
          --parameters environment=dev \
          --parameters openAiApiKey=${{ secrets.OPENAI_API_KEY }} \
          --parameters newsApiKey=${{ secrets.NEWS_API_KEY }} \
          --parameters redditClientId=${{ secrets.REDDIT_CLIENT_ID }} \
          --parameters redditClientSecret=${{ secrets.REDDIT_CLIENT_SECRET }}

  deploy:
    name: 'Deploy Infrastructure'
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    outputs:
      storage-account-name: ${{ steps.deploy.outputs.storageAccountName }}
      key-vault-name: ${{ steps.deploy.outputs.keyVaultName }}
      container-group-name: ${{ steps.deploy.outputs.containerGroupName }}
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4

    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Create Resource Group'
      run: |
        az group create \
          --name ${{ env.AZURE_RESOURCE_GROUP }} \
          --location ${{ env.AZURE_LOCATION }}

    - name: 'Deploy Infrastructure'
      id: deploy
      run: |
        DEPLOYMENT_NAME="skillradar-deployment-$(date +%Y%m%d-%H%M%S)"
        
        DEPLOYMENT_OUTPUT=$(az deployment group create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name $DEPLOYMENT_NAME \
          --template-file infrastructure/bicep/main.bicep \
          --parameters environment=${{ github.event.inputs.environment || 'dev' }} \
          --parameters openAiApiKey=${{ secrets.OPENAI_API_KEY }} \
          --parameters newsApiKey="${{ secrets.NEWS_API_KEY }}" \
          --parameters redditClientId="${{ secrets.REDDIT_CLIENT_ID }}" \
          --parameters redditClientSecret="${{ secrets.REDDIT_CLIENT_SECRET }}" \
          --query properties.outputs \
          --output json)
        
        echo "Deployment completed successfully!"
        echo "$DEPLOYMENT_OUTPUT" | jq .
        
        # Extract outputs for next jobs
        echo "storageAccountName=$(echo $DEPLOYMENT_OUTPUT | jq -r .storageAccountName.value)" >> $GITHUB_OUTPUT
        echo "keyVaultName=$(echo $DEPLOYMENT_OUTPUT | jq -r .keyVaultName.value)" >> $GITHUB_OUTPUT
        echo "containerGroupName=$(echo $DEPLOYMENT_OUTPUT | jq -r .containerGroupName.value)" >> $GITHUB_OUTPUT

    - name: 'Update GitHub Secrets'
      run: |
        # Install GitHub CLI if not available
        if ! command -v gh &> /dev/null; then
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
        fi
        
        # Update repository secrets with deployment outputs
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
        
        gh secret set AZURE_STORAGE_ACCOUNT_NAME --body "${{ steps.deploy.outputs.storageAccountName }}"
        gh secret set AZURE_KEY_VAULT_NAME --body "${{ steps.deploy.outputs.keyVaultName }}"
        gh secret set AZURE_CONTAINER_GROUP_NAME --body "${{ steps.deploy.outputs.containerGroupName }}"
        
        echo "GitHub secrets updated successfully!"